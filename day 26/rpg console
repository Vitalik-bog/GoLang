package main

import (
	"fmt"
	"strings" // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –ø–∞–∫–µ—Ç–∞ strings
)

func main() {
	fmt.Println("üéÆ –°–û–ó–î–ê–ù–ò–ï –ü–ï–†–°–û–ù–ê–ñ–ê RPG")
	fmt.Println("========================")

	// –í—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞
	fmt.Println("\nüèπ –í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å:")
	fmt.Println("1 - –í–æ–∏–Ω")
	fmt.Println("2 - –ú–∞–≥")
	fmt.Println("3 - –õ—É—á–Ω–∏–∫")
	var classChoice int
	fmt.Print("–í–∞—à –≤—ã–±–æ—Ä (1-3): ")
	fmt.Scan(&classChoice)

	// –í—ã–±–æ—Ä —Ä–∞—Å—ã
	fmt.Println("\nüßù –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å—É:")
	fmt.Println("1 - –ß–µ–ª–æ–≤–µ–∫")
	fmt.Println("2 - –≠–ª—å—Ñ")
	fmt.Println("3 - –ì–Ω–æ–º")
	var raceChoice int
	fmt.Print("–í–∞—à –≤—ã–±–æ—Ä (1-3): ")
	fmt.Scan(&raceChoice)

	// –í—ã–±–æ—Ä —Å—Ç–∏–ª—è –∏–≥—Ä—ã
	fmt.Println("\n‚öîÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –∏–≥—Ä—ã:")
	fmt.Println("1 - –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π")
	fmt.Println("2 - –ó–∞—â–∏—Ç–Ω—ã–π")
	fmt.Println("3 - –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
	var styleChoice int
	fmt.Print("–í–∞—à –≤—ã–±–æ—Ä (1-3): ")
	fmt.Scan(&styleChoice)

	// –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
	character := createCharacter(classChoice, raceChoice, styleChoice)

	// –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
	displayCharacter(character)
}

type Character struct {
	Class        string
	Race         string
	Style        string
	Health       int
	Mana         int
	Attack       int
	Defense      int
	Agility      int
	Intelligence int
	Abilities    []string
}

func createCharacter(class, race, style int) Character {
	char := Character{}

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∞—Å—Å
	switch class {
	case 1:
		char.Class = "–í–æ–∏–Ω"
		char.Health = 120
		char.Attack = 15
		char.Defense = 12
		char.Agility = 8
		char.Intelligence = 6
		char.Abilities = []string{"–ú–æ—â–Ω–∞—è –∞—Ç–∞–∫–∞", "–©–∏—Ç–æ–≤–æ–π –±–ª–æ–∫"}
	case 2:
		char.Class = "–ú–∞–≥"
		char.Health = 80
		char.Mana = 100
		char.Attack = 8
		char.Defense = 6
		char.Agility = 10
		char.Intelligence = 18
		char.Abilities = []string{"–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä", "–õ–µ–¥—è–Ω–∞—è —Å—Ç—Ä–µ–ª–∞"}
	case 3:
		char.Class = "–õ—É—á–Ω–∏–∫"
		char.Health = 90
		char.Attack = 14
		char.Defense = 8
		char.Agility = 16
		char.Intelligence = 9
		char.Abilities = []string{"–ú–µ—Ç–∫–∏–π –≤—ã—Å—Ç—Ä–µ–ª", "–£–∫–ª–æ–Ω–µ–Ω–∏–µ"}
	default:
		char.Class = "–ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫"
	}

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å—É
	switch race {
	case 1:
		char.Race = "–ß–µ–ª–æ–≤–µ–∫"
		char.Health += 10
		char.Attack += 2
		char.Intelligence += 2
	case 2:
		char.Race = "–≠–ª—å—Ñ"
		char.Mana += 20
		char.Agility += 3
		char.Intelligence += 3
	case 3:
		char.Race = "–ì–Ω–æ–º"
		char.Health += 15
		char.Defense += 4
		char.Attack += 1
	default:
		char.Race = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–∞—Å–∞"
	}

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª—å –∏–≥—Ä—ã
	switch style {
	case 1:
		char.Style = "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π"
		char.Attack += 5
		char.Abilities = append(char.Abilities, "–Ø—Ä–æ—Å—Ç—å")
	case 2:
		char.Style = "–ó–∞—â–∏—Ç–Ω—ã–π"
		char.Defense += 5
		char.Health += 20
		char.Abilities = append(char.Abilities, "–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ")
	case 3:
		char.Style = "–ü–æ–¥–¥–µ—Ä–∂–∫–∞"
		char.Intelligence += 5
		char.Mana += 30
		char.Abilities = append(char.Abilities, "–ò—Å—Ü–µ–ª–µ–Ω–∏–µ")
	default:
		char.Style = "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π"
	}

	return char
}

func displayCharacter(char Character) {
	fmt.Println("\n" + "‚ú®" + strings.Repeat("=", 40) + "‚ú®")
	fmt.Println("         –í–ê–® –ü–ï–†–°–û–ù–ê–ñ –°–û–ó–î–ê–ù!")
	fmt.Println("‚ú®" + strings.Repeat("=", 40) + "‚ú®")

	fmt.Printf("üé≠ –ö–ª–∞—Å—Å: %s\n", char.Class)
	fmt.Printf("üß¨ –†–∞—Å–∞: %s\n", char.Race)
	fmt.Printf("‚ö° –°—Ç–∏–ª—å: %s\n", char.Style)

	fmt.Println("\nüìä –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:")
	fmt.Printf("  ‚ù§Ô∏è  –ó–¥–æ—Ä–æ–≤—å–µ: %d\n", char.Health)
	fmt.Printf("  üîÆ –ú–∞–Ω–∞: %d\n", char.Mana)
	fmt.Printf("  ‚öîÔ∏è  –ê—Ç–∞–∫–∞: %d\n", char.Attack)
	fmt.Printf("  üõ°Ô∏è  –ó–∞—â–∏—Ç–∞: %d\n", char.Defense)
	fmt.Printf("  üèÉ –õ–æ–≤–∫–æ—Å—Ç—å: %d\n", char.Agility)
	fmt.Printf("  üìö –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: %d\n", char.Intelligence)

	fmt.Println("\nüéØ –°–ü–û–°–û–ë–ù–û–°–¢–ò:")
	for i, ability := range char.Abilities {
		fmt.Printf("  %d. %s\n", i+1, ability)
	}

	// –†–∞—Å—á–µ—Ç —É—Ä–æ–≤–Ω—è —Å–∏–ª—ã
	power := char.Attack + char.Defense + char.Agility + char.Intelligence
	fmt.Printf("\nüí™ –£—Ä–æ–≤–µ–Ω—å —Å–∏–ª—ã: %d\n", power)
}
