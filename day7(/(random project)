package main

import (
    "fmt"
    "math/rand"
    "time"
)

func main() {
    // 1. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
    // time.Now().UnixNano() - –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –Ω–∞–Ω–æ—Å–µ–∫—É–Ω–¥–∞—Ö
    // rand.Seed() - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç "–∑–µ—Ä–Ω–æ" –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
    rand.Seed(time.Now().UnixNano())
    
    // 2. –ó–∞–≥–∞–¥—ã–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100
    // rand.Intn(100) –¥–∞–µ—Ç —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 99
    // +1 —á—Ç–æ–±—ã –±—ã–ª–æ –æ—Ç 1 –¥–æ 100
    secretNumber := rand.Intn(100) + 1
    
    fmt.Println("üéÆ –ò–≥—Ä–∞ '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'!")
    fmt.Println("–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!")
    
    // 3. –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–æ–≥–∞–¥–∫–∏ –∏ —Å—á–µ—Ç—á–∏–∫–∞ –ø–æ–ø—ã—Ç–æ–∫
    var guess int
    attempts := 0
    
    // 4. –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª - –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–∫–∞ –Ω–µ —É–≥–∞–¥–∞–µ–º
    for {
        attempts++ // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫
        fmt.Print("–¢–≤–æ—è –ø–æ–ø—ã—Ç–∫–∞: ")
        
        // 5. –ß–∏—Ç–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        fmt.Scan(&guess)
        
        // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–≥–∞–¥–∫—É
        if guess == secretNumber {
            fmt.Printf("‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ %d –∑–∞ %d –ø–æ–ø—ã—Ç–æ–∫!\n", secretNumber, attempts)
            break // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
        } else if guess < secretNumber {
            fmt.Println("üìà –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ë–û–õ–¨–®–ï")
        } else {
            fmt.Println("üìâ –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ú–ï–ù–¨–®–ï")
        }
        
        // 7. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫
        if attempts == 5 {
            fmt.Println("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: —á–∏—Å–ª–æ –º–µ–∂–¥—É 1 –∏ 100!")
        }
    }
}
