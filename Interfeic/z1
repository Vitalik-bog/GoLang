package main

import "fmt"

type Rectangle struct {
    Width  float64
    Height float64
}

// Метод Area (value receiver)
func (r Rectangle) Area() float64 {
    return r.Width * r.Height
}

// Метод Perimeter (value receiver)
func (r Rectangle) Perimeter() float64 {
    return 2 * (r.Width + r.Height)
}

// Метод Scale с pointer receiver (изменяет размеры)
func (r *Rectangle) Scale(factor float64) {
    r.Width *= factor
    r.Height *= factor
}

func main() {
    rect := Rectangle{Width: 10, Height: 5}
    
    fmt.Printf("Прямоугольник: %.1f x %.1f\n", rect.Width, rect.Height)
    fmt.Printf("Площадь: %.1f\n", rect.Area())
    fmt.Printf("Периметр: %.1f\n", rect.Perimeter())
    
    // Изменяем размер с помощью pointer receiver
    rect.Scale(2)
    fmt.Printf("\nПосле масштабирования 2x:\n")
    fmt.Printf("Прямоугольник: %.1f x %.1f\n", rect.Width, rect.Height)
    fmt.Printf("Площадь: %.1f\n", rect.Area())
    fmt.Printf("Периметр: %.1f\n", rect.Perimeter())
}
