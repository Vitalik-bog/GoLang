package main

import "fmt"

func main() {
    // 1. Создаем срез с помощью функции `make`.
    // `make([]int, 3)` создает срез целых чисел длиной 3 и вместимостью 3.
    // Все элементы инициализируются нулевыми значениями (0 для int).
    nums := make([]int, 3)
    fmt.Println("После make:", nums) // [0, 0, 0]

    // 2. Добавляем больше элементов, чем позволяет исходная вместимость (capacity).
    // Go автоматически создаст новый массив большего размера и скопирует туда данные.
    nums = append(nums, 4, 5, 6)
    fmt.Println("После append:", nums) // [0, 0, 0, 4, 5, 6]

    // 3. Создаем целевой срез для копирования.
    dest := make([]int, len(nums))

    // 4. Копируем элементы из среза `nums` в срез `dest`.
    // Функция возвращает количество скопированных элементов.
    n := copy(dest, nums)
    fmt.Println("Скопировано элементов:", n)
    fmt.Println("Срез-назначение:", dest)

    // 5. Меняем исходный срез, чтобы доказать, что dest - это независимая копия.
    nums[0] = 100
    fmt.Println("Исходный срез изменен:", nums)
    fmt.Println("Срез-назначение остался прежним:", dest)
}
