package main

import "fmt"

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ —Å—Ç—Ä–æ–∫–∏
func reverseString(s string) string {
    // 1. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Å—Ä–µ–∑ —Ä—É–Ω
    // –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å Unicode-—Å–∏–º–≤–æ–ª–∞–º–∏
    runes := []rune(s)
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –≤ —Ä—É–Ω–∞—Ö (–∞ –Ω–µ –≤ –±–∞–π—Ç–∞—Ö!)
    length := len(runes)
    
    // 3. –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Å—Ä–µ–∑ —Ä—É–Ω
    // –ò–¥–µ–º —Å –¥–≤—É—Ö –∫–æ–Ω—Ü–æ–≤ –∫ —Å–µ—Ä–µ–¥–∏–Ω–µ –∏ –º–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ —Å–∏–º–≤–æ–ª—ã
    for i := 0; i < length/2; i++ {
        // –ú–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ i-–π —Å–∏–º–≤–æ–ª —Å –Ω–∞—á–∞–ª–∞ –∏ i-–π —Å–∏–º–≤–æ–ª —Å –∫–æ–Ω—Ü–∞
        runes[i], runes[length-1-i] = runes[length-1-i], runes[i]
    }
    
    // 4. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ä–µ–∑ —Ä—É–Ω –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å—Ç—Ä–æ–∫—É
    return string(runes)
}
func main() {
    test1 := "Hello"
    test2 := "–ü—Ä–∏–≤–µ—Ç"
    test3 := "üéÇüê±üëã" 
    test4 := "a"     
    test5 := ""     
    
    fmt.Printf("–ò—Å—Ö–æ–¥–Ω–∞—è: '%s' -> –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞—è: '%s'\n", test1, reverseString(test1))
    fmt.Printf("–ò—Å—Ö–æ–¥–Ω–∞—è: '%s' -> –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞—è: '%s'\n", test2, reverseString(test2))
    fmt.Printf("–ò—Å—Ö–æ–¥–Ω–∞—è: '%s' -> –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞—è: '%s'\n", test3, reverseString(test3))
    fmt.Printf("–ò—Å—Ö–æ–¥–Ω–∞—è: '%s' -> –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞—è: '%s'\n", test4, reverseString(test4))
    fmt.Printf("–ò—Å—Ö–æ–¥–Ω–∞—è: '%s' -> –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞—è: '%s'\n", test5, reverseString(test5))
}
