package main

import (
    "fmt"
    "math/rand"
    "time"
)

func main() {
    rand.Seed(time.Now().UnixNano())
    
    choices := map[int]string{
        1: "–ö–∞–º–µ–Ω—å",
        2: "–ù–æ–∂–Ω–∏—Ü—ã", 
        3: "–ë—É–º–∞–≥–∞",
    }
    
    fmt.Println("üéÆ –ò–ì–†–ê: –ö–ê–ú–ï–ù–¨-–ù–û–ñ–ù–ò–¶–´-–ë–£–ú–ê–ì–ê")
    fmt.Println("=============================")
    fmt.Println("1 - –ö–∞–º–µ–Ω—å")
    fmt.Println("2 - –ù–æ–∂–Ω–∏—Ü—ã")
    fmt.Println("3 - –ë—É–º–∞–≥–∞")
    
    var playerChoice int
    fmt.Print("–í–∞—à –≤—ã–±–æ—Ä (1-3): ")
    fmt.Scan(&playerChoice)
    
    if playerChoice < 1 || playerChoice > 3 {
        fmt.Println("–û—à–∏–±–∫–∞! –í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3")
        return
    }
    
    computerChoice := rand.Intn(3) + 1
    
    fmt.Printf("\nüë§ –í–∞—à –≤—ã–±–æ—Ä: %s\n", choices[playerChoice])
    fmt.Printf("ü§ñ –í—ã–±–æ—Ä –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: %s\n", choices[computerChoice])
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    result := determineWinner(playerChoice, computerChoice)
    fmt.Println(result)
}

func determineWinner(player, computer int) string {
    if player == computer {
        return "üéØ –ù–∏—á—å—è!"
    }
    
    switch {
    case player == 1 && computer == 2: // –ö–∞–º–µ–Ω—å vs –ù–æ–∂–Ω–∏—Ü—ã
        return "üéâ –í—ã –ø–æ–±–µ–¥–∏–ª–∏! –ö–∞–º–µ–Ω—å –ª–æ–º–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã"
    case player == 2 && computer == 3: // –ù–æ–∂–Ω–∏—Ü—ã vs –ë—É–º–∞–≥–∞
        return "üéâ –í—ã –ø–æ–±–µ–¥–∏–ª–∏! –ù–æ–∂–Ω–∏—Ü—ã —Ä–µ–∂—É—Ç –±—É–º–∞–≥—É"
    case player == 3 && computer == 1: // –ë—É–º–∞–≥–∞ vs –ö–∞–º–µ–Ω—å
        return "üéâ –í—ã –ø–æ–±–µ–¥–∏–ª–∏! –ë—É–º–∞–≥–∞ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –∫–∞–º–µ–Ω—å"
    default:
        return "üíª –ü–æ–±–µ–¥–∏–ª –∫–æ–º–ø—å—é—Ç–µ—Ä!"
    }
}
